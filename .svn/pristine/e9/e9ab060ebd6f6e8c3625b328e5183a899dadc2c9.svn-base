// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoFile/CoreBattleMsg.proto

package avatar.protobuf;

public final class CoreBattle {
  private CoreBattle() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Core_GameStart_S2COrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 bankerUserId = 1;
    boolean hasBankerUserId();
    int getBankerUserId();
    
    // repeated int32 dices = 2;
    java.util.List<Integer> getDicesList();
    int getDicesCount();
    int getDices(int index);
    
    // required int32 currentTimes = 3;
    boolean hasCurrentTimes();
    int getCurrentTimes();
    
    // repeated int32 handCards = 4;
    java.util.List<Integer> getHandCardsList();
    int getHandCardsCount();
    int getHandCards(int index);
    
    // repeated int32 flowerCards = 5;
    java.util.List<Integer> getFlowerCardsList();
    int getFlowerCardsCount();
    int getFlowerCards(int index);
    
    // required int32 touchMahjongCode = 6;
    boolean hasTouchMahjongCode();
    int getTouchMahjongCode();
    
    // required int32 leftCardCount = 7;
    boolean hasLeftCardCount();
    int getLeftCardCount();
    
    // required .Platform.Model.PushPlayerActTipS2C pushPlayerActTipS2C = 8;
    boolean hasPushPlayerActTipS2C();
    Battle.PushPlayerActTipS2C getPushPlayerActTipS2C();
    Battle.PushPlayerActTipS2COrBuilder getPushPlayerActTipS2COrBuilder();
    
    // optional int64 startTime = 9;
    boolean hasStartTime();
    long getStartTime();
    
    // optional int32 treasureMotherCard = 10;
    boolean hasTreasureMotherCard();
    int getTreasureMotherCard();
    
    // optional int32 treasureCard = 11;
    boolean hasTreasureCard();
    int getTreasureCard();
  }
  public static final class Core_GameStart_S2C extends
      com.google.protobuf.GeneratedMessage
      implements Core_GameStart_S2COrBuilder {
    // Use Core_GameStart_S2C.newBuilder() to construct.
    private Core_GameStart_S2C(Builder builder) {
      super(builder);
    }
    private Core_GameStart_S2C(boolean noInit) {}
    
    private static final Core_GameStart_S2C defaultInstance;
    public static Core_GameStart_S2C getDefaultInstance() {
      return defaultInstance;
    }
    
    public Core_GameStart_S2C getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CoreBattle.internal_static_Platform_Model_Core_GameStart_S2C_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CoreBattle.internal_static_Platform_Model_Core_GameStart_S2C_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 bankerUserId = 1;
    public static final int BANKERUSERID_FIELD_NUMBER = 1;
    private int bankerUserId_;
    public boolean hasBankerUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getBankerUserId() {
      return bankerUserId_;
    }
    
    // repeated int32 dices = 2;
    public static final int DICES_FIELD_NUMBER = 2;
    private java.util.List<Integer> dices_;
    public java.util.List<Integer>
        getDicesList() {
      return dices_;
    }
    public int getDicesCount() {
      return dices_.size();
    }
    public int getDices(int index) {
      return dices_.get(index);
    }
    
    // required int32 currentTimes = 3;
    public static final int CURRENTTIMES_FIELD_NUMBER = 3;
    private int currentTimes_;
    public boolean hasCurrentTimes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getCurrentTimes() {
      return currentTimes_;
    }
    
    // repeated int32 handCards = 4;
    public static final int HANDCARDS_FIELD_NUMBER = 4;
    private java.util.List<Integer> handCards_;
    public java.util.List<Integer>
        getHandCardsList() {
      return handCards_;
    }
    public int getHandCardsCount() {
      return handCards_.size();
    }
    public int getHandCards(int index) {
      return handCards_.get(index);
    }
    
    // repeated int32 flowerCards = 5;
    public static final int FLOWERCARDS_FIELD_NUMBER = 5;
    private java.util.List<Integer> flowerCards_;
    public java.util.List<Integer>
        getFlowerCardsList() {
      return flowerCards_;
    }
    public int getFlowerCardsCount() {
      return flowerCards_.size();
    }
    public int getFlowerCards(int index) {
      return flowerCards_.get(index);
    }
    
    // required int32 touchMahjongCode = 6;
    public static final int TOUCHMAHJONGCODE_FIELD_NUMBER = 6;
    private int touchMahjongCode_;
    public boolean hasTouchMahjongCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTouchMahjongCode() {
      return touchMahjongCode_;
    }
    
    // required int32 leftCardCount = 7;
    public static final int LEFTCARDCOUNT_FIELD_NUMBER = 7;
    private int leftCardCount_;
    public boolean hasLeftCardCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getLeftCardCount() {
      return leftCardCount_;
    }
    
    // required .Platform.Model.PushPlayerActTipS2C pushPlayerActTipS2C = 8;
    public static final int PUSHPLAYERACTTIPS2C_FIELD_NUMBER = 8;
    private Battle.PushPlayerActTipS2C pushPlayerActTipS2C_;
    public boolean hasPushPlayerActTipS2C() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public Battle.PushPlayerActTipS2C getPushPlayerActTipS2C() {
      return pushPlayerActTipS2C_;
    }
    public Battle.PushPlayerActTipS2COrBuilder getPushPlayerActTipS2COrBuilder() {
      return pushPlayerActTipS2C_;
    }
    
    // optional int64 startTime = 9;
    public static final int STARTTIME_FIELD_NUMBER = 9;
    private long startTime_;
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getStartTime() {
      return startTime_;
    }
    
    // optional int32 treasureMotherCard = 10;
    public static final int TREASUREMOTHERCARD_FIELD_NUMBER = 10;
    private int treasureMotherCard_;
    public boolean hasTreasureMotherCard() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getTreasureMotherCard() {
      return treasureMotherCard_;
    }
    
    // optional int32 treasureCard = 11;
    public static final int TREASURECARD_FIELD_NUMBER = 11;
    private int treasureCard_;
    public boolean hasTreasureCard() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getTreasureCard() {
      return treasureCard_;
    }
    
    private void initFields() {
      bankerUserId_ = 0;
      dices_ = java.util.Collections.emptyList();;
      currentTimes_ = 0;
      handCards_ = java.util.Collections.emptyList();;
      flowerCards_ = java.util.Collections.emptyList();;
      touchMahjongCode_ = 0;
      leftCardCount_ = 0;
      pushPlayerActTipS2C_ = Battle.PushPlayerActTipS2C.getDefaultInstance();
      startTime_ = 0L;
      treasureMotherCard_ = 0;
      treasureCard_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasBankerUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentTimes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTouchMahjongCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeftCardCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPushPlayerActTipS2C()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPushPlayerActTipS2C().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, bankerUserId_);
      }
      for (int i = 0; i < dices_.size(); i++) {
        output.writeInt32(2, dices_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, currentTimes_);
      }
      for (int i = 0; i < handCards_.size(); i++) {
        output.writeInt32(4, handCards_.get(i));
      }
      for (int i = 0; i < flowerCards_.size(); i++) {
        output.writeInt32(5, flowerCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(6, touchMahjongCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(7, leftCardCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(8, pushPlayerActTipS2C_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(9, startTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, treasureMotherCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, treasureCard_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bankerUserId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dices_.get(i));
        }
        size += dataSize;
        size += 1 * getDicesList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, currentTimes_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCards_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flowerCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flowerCards_.get(i));
        }
        size += dataSize;
        size += 1 * getFlowerCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, touchMahjongCode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, leftCardCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, pushPlayerActTipS2C_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, startTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, treasureMotherCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, treasureCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Core_GameStart_S2C parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Core_GameStart_S2C parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Core_GameStart_S2C parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Core_GameStart_S2C parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Core_GameStart_S2C parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Core_GameStart_S2C parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Core_GameStart_S2C parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Core_GameStart_S2C parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Core_GameStart_S2C parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Core_GameStart_S2C parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Core_GameStart_S2C prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Core_GameStart_S2COrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CoreBattle.internal_static_Platform_Model_Core_GameStart_S2C_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CoreBattle.internal_static_Platform_Model_Core_GameStart_S2C_fieldAccessorTable;
      }
      
      // Construct using avatar.protobuf.CoreBattle.Core_GameStart_S2C.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPushPlayerActTipS2CFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        bankerUserId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dices_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentTimes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        handCards_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        flowerCards_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        touchMahjongCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        leftCardCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (pushPlayerActTipS2CBuilder_ == null) {
          pushPlayerActTipS2C_ = Battle.PushPlayerActTipS2C.getDefaultInstance();
        } else {
          pushPlayerActTipS2CBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        treasureMotherCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        treasureCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Core_GameStart_S2C.getDescriptor();
      }
      
      public Core_GameStart_S2C getDefaultInstanceForType() {
        return Core_GameStart_S2C.getDefaultInstance();
      }
      
      public Core_GameStart_S2C build() {
        Core_GameStart_S2C result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Core_GameStart_S2C buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Core_GameStart_S2C result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Core_GameStart_S2C buildPartial() {
        Core_GameStart_S2C result = new Core_GameStart_S2C(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bankerUserId_ = bankerUserId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          dices_ = java.util.Collections.unmodifiableList(dices_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dices_ = dices_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentTimes_ = currentTimes_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          handCards_ = java.util.Collections.unmodifiableList(handCards_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.handCards_ = handCards_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          flowerCards_ = java.util.Collections.unmodifiableList(flowerCards_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.flowerCards_ = flowerCards_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.touchMahjongCode_ = touchMahjongCode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.leftCardCount_ = leftCardCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        if (pushPlayerActTipS2CBuilder_ == null) {
          result.pushPlayerActTipS2C_ = pushPlayerActTipS2C_;
        } else {
          result.pushPlayerActTipS2C_ = pushPlayerActTipS2CBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.treasureMotherCard_ = treasureMotherCard_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.treasureCard_ = treasureCard_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Core_GameStart_S2C) {
          return mergeFrom((Core_GameStart_S2C)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Core_GameStart_S2C other) {
        if (other == Core_GameStart_S2C.getDefaultInstance()) return this;
        if (other.hasBankerUserId()) {
          setBankerUserId(other.getBankerUserId());
        }
        if (!other.dices_.isEmpty()) {
          if (dices_.isEmpty()) {
            dices_ = other.dices_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDicesIsMutable();
            dices_.addAll(other.dices_);
          }
          onChanged();
        }
        if (other.hasCurrentTimes()) {
          setCurrentTimes(other.getCurrentTimes());
        }
        if (!other.handCards_.isEmpty()) {
          if (handCards_.isEmpty()) {
            handCards_ = other.handCards_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHandCardsIsMutable();
            handCards_.addAll(other.handCards_);
          }
          onChanged();
        }
        if (!other.flowerCards_.isEmpty()) {
          if (flowerCards_.isEmpty()) {
            flowerCards_ = other.flowerCards_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFlowerCardsIsMutable();
            flowerCards_.addAll(other.flowerCards_);
          }
          onChanged();
        }
        if (other.hasTouchMahjongCode()) {
          setTouchMahjongCode(other.getTouchMahjongCode());
        }
        if (other.hasLeftCardCount()) {
          setLeftCardCount(other.getLeftCardCount());
        }
        if (other.hasPushPlayerActTipS2C()) {
          mergePushPlayerActTipS2C(other.getPushPlayerActTipS2C());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasTreasureMotherCard()) {
          setTreasureMotherCard(other.getTreasureMotherCard());
        }
        if (other.hasTreasureCard()) {
          setTreasureCard(other.getTreasureCard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasBankerUserId()) {
          
          return false;
        }
        if (!hasCurrentTimes()) {
          
          return false;
        }
        if (!hasTouchMahjongCode()) {
          
          return false;
        }
        if (!hasLeftCardCount()) {
          
          return false;
        }
        if (!hasPushPlayerActTipS2C()) {
          
          return false;
        }
        if (!getPushPlayerActTipS2C().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bankerUserId_ = input.readInt32();
              break;
            }
            case 16: {
              ensureDicesIsMutable();
              dices_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDices(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              currentTimes_ = input.readInt32();
              break;
            }
            case 32: {
              ensureHandCardsIsMutable();
              handCards_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addHandCards(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureFlowerCardsIsMutable();
              flowerCards_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFlowerCards(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              touchMahjongCode_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              leftCardCount_ = input.readInt32();
              break;
            }
            case 66: {
              Battle.PushPlayerActTipS2C.Builder subBuilder = Battle.PushPlayerActTipS2C.newBuilder();
              if (hasPushPlayerActTipS2C()) {
                subBuilder.mergeFrom(getPushPlayerActTipS2C());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPushPlayerActTipS2C(subBuilder.buildPartial());
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              startTime_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              treasureMotherCard_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              treasureCard_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 bankerUserId = 1;
      private int bankerUserId_ ;
      public boolean hasBankerUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getBankerUserId() {
        return bankerUserId_;
      }
      public Builder setBankerUserId(int value) {
        bitField0_ |= 0x00000001;
        bankerUserId_ = value;
        onChanged();
        return this;
      }
      public Builder clearBankerUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bankerUserId_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 dices = 2;
      private java.util.List<Integer> dices_ = java.util.Collections.emptyList();;
      private void ensureDicesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          dices_ = new java.util.ArrayList<Integer>(dices_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<Integer>
          getDicesList() {
        return java.util.Collections.unmodifiableList(dices_);
      }
      public int getDicesCount() {
        return dices_.size();
      }
      public int getDices(int index) {
        return dices_.get(index);
      }
      public Builder setDices(
          int index, int value) {
        ensureDicesIsMutable();
        dices_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDices(int value) {
        ensureDicesIsMutable();
        dices_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDices(
          Iterable<? extends Integer> values) {
        ensureDicesIsMutable();
        super.addAll(values, dices_);
        onChanged();
        return this;
      }
      public Builder clearDices() {
        dices_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // required int32 currentTimes = 3;
      private int currentTimes_ ;
      public boolean hasCurrentTimes() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getCurrentTimes() {
        return currentTimes_;
      }
      public Builder setCurrentTimes(int value) {
        bitField0_ |= 0x00000004;
        currentTimes_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrentTimes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentTimes_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 handCards = 4;
      private java.util.List<Integer> handCards_ = java.util.Collections.emptyList();;
      private void ensureHandCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          handCards_ = new java.util.ArrayList<Integer>(handCards_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<Integer>
          getHandCardsList() {
        return java.util.Collections.unmodifiableList(handCards_);
      }
      public int getHandCardsCount() {
        return handCards_.size();
      }
      public int getHandCards(int index) {
        return handCards_.get(index);
      }
      public Builder setHandCards(
          int index, int value) {
        ensureHandCardsIsMutable();
        handCards_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addHandCards(int value) {
        ensureHandCardsIsMutable();
        handCards_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllHandCards(
          Iterable<? extends Integer> values) {
        ensureHandCardsIsMutable();
        super.addAll(values, handCards_);
        onChanged();
        return this;
      }
      public Builder clearHandCards() {
        handCards_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated int32 flowerCards = 5;
      private java.util.List<Integer> flowerCards_ = java.util.Collections.emptyList();;
      private void ensureFlowerCardsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          flowerCards_ = new java.util.ArrayList<Integer>(flowerCards_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<Integer>
          getFlowerCardsList() {
        return java.util.Collections.unmodifiableList(flowerCards_);
      }
      public int getFlowerCardsCount() {
        return flowerCards_.size();
      }
      public int getFlowerCards(int index) {
        return flowerCards_.get(index);
      }
      public Builder setFlowerCards(
          int index, int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFlowerCards(int value) {
        ensureFlowerCardsIsMutable();
        flowerCards_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFlowerCards(
          Iterable<? extends Integer> values) {
        ensureFlowerCardsIsMutable();
        super.addAll(values, flowerCards_);
        onChanged();
        return this;
      }
      public Builder clearFlowerCards() {
        flowerCards_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // required int32 touchMahjongCode = 6;
      private int touchMahjongCode_ ;
      public boolean hasTouchMahjongCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getTouchMahjongCode() {
        return touchMahjongCode_;
      }
      public Builder setTouchMahjongCode(int value) {
        bitField0_ |= 0x00000020;
        touchMahjongCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearTouchMahjongCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        touchMahjongCode_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 leftCardCount = 7;
      private int leftCardCount_ ;
      public boolean hasLeftCardCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getLeftCardCount() {
        return leftCardCount_;
      }
      public Builder setLeftCardCount(int value) {
        bitField0_ |= 0x00000040;
        leftCardCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearLeftCardCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        leftCardCount_ = 0;
        onChanged();
        return this;
      }
      
      // required .Platform.Model.PushPlayerActTipS2C pushPlayerActTipS2C = 8;
      private Battle.PushPlayerActTipS2C pushPlayerActTipS2C_ = Battle.PushPlayerActTipS2C.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Battle.PushPlayerActTipS2C, Battle.PushPlayerActTipS2C.Builder, Battle.PushPlayerActTipS2COrBuilder> pushPlayerActTipS2CBuilder_;
      public boolean hasPushPlayerActTipS2C() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public Battle.PushPlayerActTipS2C getPushPlayerActTipS2C() {
        if (pushPlayerActTipS2CBuilder_ == null) {
          return pushPlayerActTipS2C_;
        } else {
          return pushPlayerActTipS2CBuilder_.getMessage();
        }
      }
      public Builder setPushPlayerActTipS2C(Battle.PushPlayerActTipS2C value) {
        if (pushPlayerActTipS2CBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pushPlayerActTipS2C_ = value;
          onChanged();
        } else {
          pushPlayerActTipS2CBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setPushPlayerActTipS2C(
          Battle.PushPlayerActTipS2C.Builder builderForValue) {
        if (pushPlayerActTipS2CBuilder_ == null) {
          pushPlayerActTipS2C_ = builderForValue.build();
          onChanged();
        } else {
          pushPlayerActTipS2CBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergePushPlayerActTipS2C(Battle.PushPlayerActTipS2C value) {
        if (pushPlayerActTipS2CBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              pushPlayerActTipS2C_ != Battle.PushPlayerActTipS2C.getDefaultInstance()) {
            pushPlayerActTipS2C_ =
              Battle.PushPlayerActTipS2C.newBuilder(pushPlayerActTipS2C_).mergeFrom(value).buildPartial();
          } else {
            pushPlayerActTipS2C_ = value;
          }
          onChanged();
        } else {
          pushPlayerActTipS2CBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearPushPlayerActTipS2C() {
        if (pushPlayerActTipS2CBuilder_ == null) {
          pushPlayerActTipS2C_ = Battle.PushPlayerActTipS2C.getDefaultInstance();
          onChanged();
        } else {
          pushPlayerActTipS2CBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      public Battle.PushPlayerActTipS2C.Builder getPushPlayerActTipS2CBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getPushPlayerActTipS2CFieldBuilder().getBuilder();
      }
      public Battle.PushPlayerActTipS2COrBuilder getPushPlayerActTipS2COrBuilder() {
        if (pushPlayerActTipS2CBuilder_ != null) {
          return pushPlayerActTipS2CBuilder_.getMessageOrBuilder();
        } else {
          return pushPlayerActTipS2C_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Battle.PushPlayerActTipS2C, Battle.PushPlayerActTipS2C.Builder, Battle.PushPlayerActTipS2COrBuilder>
          getPushPlayerActTipS2CFieldBuilder() {
        if (pushPlayerActTipS2CBuilder_ == null) {
          pushPlayerActTipS2CBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Battle.PushPlayerActTipS2C, Battle.PushPlayerActTipS2C.Builder, Battle.PushPlayerActTipS2COrBuilder>(
                  pushPlayerActTipS2C_,
                  getParentForChildren(),
                  isClean());
          pushPlayerActTipS2C_ = null;
        }
        return pushPlayerActTipS2CBuilder_;
      }
      
      // optional int64 startTime = 9;
      private long startTime_ ;
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public long getStartTime() {
        return startTime_;
      }
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000100;
        startTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        startTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 treasureMotherCard = 10;
      private int treasureMotherCard_ ;
      public boolean hasTreasureMotherCard() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getTreasureMotherCard() {
        return treasureMotherCard_;
      }
      public Builder setTreasureMotherCard(int value) {
        bitField0_ |= 0x00000200;
        treasureMotherCard_ = value;
        onChanged();
        return this;
      }
      public Builder clearTreasureMotherCard() {
        bitField0_ = (bitField0_ & ~0x00000200);
        treasureMotherCard_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 treasureCard = 11;
      private int treasureCard_ ;
      public boolean hasTreasureCard() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getTreasureCard() {
        return treasureCard_;
      }
      public Builder setTreasureCard(int value) {
        bitField0_ |= 0x00000400;
        treasureCard_ = value;
        onChanged();
        return this;
      }
      public Builder clearTreasureCard() {
        bitField0_ = (bitField0_ & ~0x00000400);
        treasureCard_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Platform.Model.Core_GameStart_S2C)
    }
    
    static {
      defaultInstance = new Core_GameStart_S2C(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Platform.Model.Core_GameStart_S2C)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Platform_Model_Core_GameStart_S2C_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Platform_Model_Core_GameStart_S2C_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\035ProtoFile/CoreBattleMsg.proto\022\016Platfor" +
      "m.Model\032\027ProtoFile/HallMsg.proto\032\031ProtoF" +
      "ile/BattleMsg.proto\"\257\002\n\022Core_GameStart_S" +
      "2C\022\024\n\014bankerUserId\030\001 \002(\005\022\r\n\005dices\030\002 \003(\005\022" +
      "\024\n\014currentTimes\030\003 \002(\005\022\021\n\thandCards\030\004 \003(\005" +
      "\022\023\n\013flowerCards\030\005 \003(\005\022\030\n\020touchMahjongCod" +
      "e\030\006 \002(\005\022\025\n\rleftCardCount\030\007 \002(\005\022@\n\023pushPl" +
      "ayerActTipS2C\030\010 \002(\0132#.Platform.Model.Pus" +
      "hPlayerActTipS2C\022\021\n\tstartTime\030\t \001(\003\022\032\n\022t" +
      "reasureMotherCard\030\n \001(\005\022\024\n\014treasureCard\030",
      "\013 \001(\005B\035\n\017avatar.protobufB\nCoreBattle"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Platform_Model_Core_GameStart_S2C_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Platform_Model_Core_GameStart_S2C_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Platform_Model_Core_GameStart_S2C_descriptor,
              new String[] { "BankerUserId", "Dices", "CurrentTimes", "HandCards", "FlowerCards", "TouchMahjongCode", "LeftCardCount", "PushPlayerActTipS2C", "StartTime", "TreasureMotherCard", "TreasureCard", },
              Core_GameStart_S2C.class,
              Core_GameStart_S2C.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Hall.getDescriptor(),
          Battle.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
